import fetch from 'node-fetch';
import { AgentServerError } from '../types';
type PopQueryRequest = {
    resourceId: string;
    environmentName: string;
    agentUuid: string;
    versionHash: string | undefined;
};
type RegisterAgentRequest = {
    resourceId: string;
    environmentName: string;
    version: string;
    agentUuid: string;
    operations: Record<string, unknown>;
};
type PostQueryResponseRequest = {
    resourceId: string;
    environmentName: string;
    versionHash: string | undefined;
    agentUuid: string;
    queryUuid: string;
    metadata: {
        packageVersion: string;
        packageLanguage: 'python' | 'javascript';
        agentReceivedQueryAt: string;
        agentFinishedQueryAt: string;
        parameters: Record<string, unknown> | undefined;
    };
    status: 'success' | 'error';
    data: unknown;
    error: AgentServerError | undefined;
};
export declare class RetoolAPI {
    private _hostUrl;
    private _apiKey;
    private _pollingTimeoutMs;
    constructor({ hostUrl, apiKey, pollingTimeoutMs }: {
        hostUrl: string;
        apiKey: string;
        pollingTimeoutMs: number;
    });
    popQuery(options: PopQueryRequest): Promise<fetch.Response>;
    registerAgent(options: RegisterAgentRequest): Promise<fetch.Response>;
    postQueryResponse(options: PostQueryResponseRequest): Promise<fetch.Response>;
}
export {};
